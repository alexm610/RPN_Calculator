$date
	Fri Aug 12 22:39:55 2022
$end
$version
	ModelSim Version 10.5b
$end
$timescale
	1ps
$end

$scope module rpn_tb $end
$var reg 1 ! CLOCK_50 $end
$var reg 4 " KEY [3:0] $end
$var reg 10 # SW [9:0] $end
$var wire 1 $ LEDR [9] $end
$var wire 1 % LEDR [8] $end
$var wire 1 & LEDR [7] $end
$var wire 1 ' LEDR [6] $end
$var wire 1 ( LEDR [5] $end
$var wire 1 ) LEDR [4] $end
$var wire 1 * LEDR [3] $end
$var wire 1 + LEDR [2] $end
$var wire 1 , LEDR [1] $end
$var wire 1 - LEDR [0] $end
$var wire 1 . HEX0 [6] $end
$var wire 1 / HEX0 [5] $end
$var wire 1 0 HEX0 [4] $end
$var wire 1 1 HEX0 [3] $end
$var wire 1 2 HEX0 [2] $end
$var wire 1 3 HEX0 [1] $end
$var wire 1 4 HEX0 [0] $end
$var wire 1 5 HEX1 [6] $end
$var wire 1 6 HEX1 [5] $end
$var wire 1 7 HEX1 [4] $end
$var wire 1 8 HEX1 [3] $end
$var wire 1 9 HEX1 [2] $end
$var wire 1 : HEX1 [1] $end
$var wire 1 ; HEX1 [0] $end
$var wire 1 < HEX2 [6] $end
$var wire 1 = HEX2 [5] $end
$var wire 1 > HEX2 [4] $end
$var wire 1 ? HEX2 [3] $end
$var wire 1 @ HEX2 [2] $end
$var wire 1 A HEX2 [1] $end
$var wire 1 B HEX2 [0] $end
$var wire 1 C HEX3 [6] $end
$var wire 1 D HEX3 [5] $end
$var wire 1 E HEX3 [4] $end
$var wire 1 F HEX3 [3] $end
$var wire 1 G HEX3 [2] $end
$var wire 1 H HEX3 [1] $end
$var wire 1 I HEX3 [0] $end
$var wire 1 J HEX4 [6] $end
$var wire 1 K HEX4 [5] $end
$var wire 1 L HEX4 [4] $end
$var wire 1 M HEX4 [3] $end
$var wire 1 N HEX4 [2] $end
$var wire 1 O HEX4 [1] $end
$var wire 1 P HEX4 [0] $end
$var wire 1 Q HEX5 [6] $end
$var wire 1 R HEX5 [5] $end
$var wire 1 S HEX5 [4] $end
$var wire 1 T HEX5 [3] $end
$var wire 1 U HEX5 [2] $end
$var wire 1 V HEX5 [1] $end
$var wire 1 W HEX5 [0] $end
$var reg 8 X data_IN [7:0] $end
$var reg 8 Y data_OUT [7:0] $end
$var reg 1 Z error $end

$scope module DUT $end
$var wire 1 [ CLOCK_50 $end
$var wire 1 \ KEY [3] $end
$var wire 1 ] KEY [2] $end
$var wire 1 ^ KEY [1] $end
$var wire 1 _ KEY [0] $end
$var wire 1 ` SW [9] $end
$var wire 1 a SW [8] $end
$var wire 1 b SW [7] $end
$var wire 1 c SW [6] $end
$var wire 1 d SW [5] $end
$var wire 1 e SW [4] $end
$var wire 1 f SW [3] $end
$var wire 1 g SW [2] $end
$var wire 1 h SW [1] $end
$var wire 1 i SW [0] $end
$var wire 1 $ LEDR [9] $end
$var wire 1 % LEDR [8] $end
$var wire 1 & LEDR [7] $end
$var wire 1 ' LEDR [6] $end
$var wire 1 ( LEDR [5] $end
$var wire 1 ) LEDR [4] $end
$var wire 1 * LEDR [3] $end
$var wire 1 + LEDR [2] $end
$var wire 1 , LEDR [1] $end
$var wire 1 - LEDR [0] $end
$var wire 1 . HEX0 [6] $end
$var wire 1 / HEX0 [5] $end
$var wire 1 0 HEX0 [4] $end
$var wire 1 1 HEX0 [3] $end
$var wire 1 2 HEX0 [2] $end
$var wire 1 3 HEX0 [1] $end
$var wire 1 4 HEX0 [0] $end
$var wire 1 5 HEX1 [6] $end
$var wire 1 6 HEX1 [5] $end
$var wire 1 7 HEX1 [4] $end
$var wire 1 8 HEX1 [3] $end
$var wire 1 9 HEX1 [2] $end
$var wire 1 : HEX1 [1] $end
$var wire 1 ; HEX1 [0] $end
$var wire 1 < HEX2 [6] $end
$var wire 1 = HEX2 [5] $end
$var wire 1 > HEX2 [4] $end
$var wire 1 ? HEX2 [3] $end
$var wire 1 @ HEX2 [2] $end
$var wire 1 A HEX2 [1] $end
$var wire 1 B HEX2 [0] $end
$var wire 1 C HEX3 [6] $end
$var wire 1 D HEX3 [5] $end
$var wire 1 E HEX3 [4] $end
$var wire 1 F HEX3 [3] $end
$var wire 1 G HEX3 [2] $end
$var wire 1 H HEX3 [1] $end
$var wire 1 I HEX3 [0] $end
$var wire 1 J HEX4 [6] $end
$var wire 1 K HEX4 [5] $end
$var wire 1 L HEX4 [4] $end
$var wire 1 M HEX4 [3] $end
$var wire 1 N HEX4 [2] $end
$var wire 1 O HEX4 [1] $end
$var wire 1 P HEX4 [0] $end
$var wire 1 Q HEX5 [6] $end
$var wire 1 R HEX5 [5] $end
$var wire 1 S HEX5 [4] $end
$var wire 1 T HEX5 [3] $end
$var wire 1 U HEX5 [2] $end
$var wire 1 V HEX5 [1] $end
$var wire 1 W HEX5 [0] $end
$var wire 1 j data_IN [7] $end
$var wire 1 k data_IN [6] $end
$var wire 1 l data_IN [5] $end
$var wire 1 m data_IN [4] $end
$var wire 1 n data_IN [3] $end
$var wire 1 o data_IN [2] $end
$var wire 1 p data_IN [1] $end
$var wire 1 q data_IN [0] $end
$var wire 1 r data_OUT [7] $end
$var wire 1 s data_OUT [6] $end
$var wire 1 t data_OUT [5] $end
$var wire 1 u data_OUT [4] $end
$var wire 1 v data_OUT [3] $end
$var wire 1 w data_OUT [2] $end
$var wire 1 x data_OUT [1] $end
$var wire 1 y data_OUT [0] $end
$var wire 1 z SP [7] $end
$var wire 1 { SP [6] $end
$var wire 1 | SP [5] $end
$var wire 1 } SP [4] $end
$var wire 1 ~ SP [3] $end
$var wire 1 !! SP [2] $end
$var wire 1 "! SP [1] $end
$var wire 1 #! SP [0] $end
$var wire 1 $! into_SP_reg [7] $end
$var wire 1 %! into_SP_reg [6] $end
$var wire 1 &! into_SP_reg [5] $end
$var wire 1 '! into_SP_reg [4] $end
$var wire 1 (! into_SP_reg [3] $end
$var wire 1 )! into_SP_reg [2] $end
$var wire 1 *! into_SP_reg [1] $end
$var wire 1 +! into_SP_reg [0] $end
$var wire 1 ,! output_line [7] $end
$var wire 1 -! output_line [6] $end
$var wire 1 .! output_line [5] $end
$var wire 1 /! output_line [4] $end
$var wire 1 0! output_line [3] $end
$var wire 1 1! output_line [2] $end
$var wire 1 2! output_line [1] $end
$var wire 1 3! output_line [0] $end
$var wire 1 4! memory_out [7] $end
$var wire 1 5! memory_out [6] $end
$var wire 1 6! memory_out [5] $end
$var wire 1 7! memory_out [4] $end
$var wire 1 8! memory_out [3] $end
$var wire 1 9! memory_out [2] $end
$var wire 1 :! memory_out [1] $end
$var wire 1 ;! memory_out [0] $end
$var wire 1 <! into_alu_A [7] $end
$var wire 1 =! into_alu_A [6] $end
$var wire 1 >! into_alu_A [5] $end
$var wire 1 ?! into_alu_A [4] $end
$var wire 1 @! into_alu_A [3] $end
$var wire 1 A! into_alu_A [2] $end
$var wire 1 B! into_alu_A [1] $end
$var wire 1 C! into_alu_A [0] $end
$var wire 1 D! into_alu_B [7] $end
$var wire 1 E! into_alu_B [6] $end
$var wire 1 F! into_alu_B [5] $end
$var wire 1 G! into_alu_B [4] $end
$var wire 1 H! into_alu_B [3] $end
$var wire 1 I! into_alu_B [2] $end
$var wire 1 J! into_alu_B [1] $end
$var wire 1 K! into_alu_B [0] $end
$var wire 1 L! out_ALU [7] $end
$var wire 1 M! out_ALU [6] $end
$var wire 1 N! out_ALU [5] $end
$var wire 1 O! out_ALU [4] $end
$var wire 1 P! out_ALU [3] $end
$var wire 1 Q! out_ALU [2] $end
$var wire 1 R! out_ALU [1] $end
$var wire 1 S! out_ALU [0] $end
$var reg 1 T! write_dummy $end
$var reg 1 U! tri_enable $end
$var reg 1 V! write_SP $end
$var reg 1 W! write_memory $end
$var reg 1 X! load_A $end
$var reg 1 Y! load_B $end
$var reg 4 Z! current_state [3:0] $end
$var reg 3 [! ALU_OP [2:0] $end

$scope module STACK_POINTER $end
$var parameter 32 \! k $end
$var wire 1 [ clk $end
$var wire 1 ]! enable $end
$var wire 1 $! in [7] $end
$var wire 1 %! in [6] $end
$var wire 1 &! in [5] $end
$var wire 1 '! in [4] $end
$var wire 1 (! in [3] $end
$var wire 1 )! in [2] $end
$var wire 1 *! in [1] $end
$var wire 1 +! in [0] $end
$var wire 1 z out [7] $end
$var wire 1 { out [6] $end
$var wire 1 | out [5] $end
$var wire 1 } out [4] $end
$var wire 1 ~ out [3] $end
$var wire 1 !! out [2] $end
$var wire 1 "! out [1] $end
$var wire 1 #! out [0] $end
$var wire 1 ^! mux_into_reg [7] $end
$var wire 1 _! mux_into_reg [6] $end
$var wire 1 `! mux_into_reg [5] $end
$var wire 1 a! mux_into_reg [4] $end
$var wire 1 b! mux_into_reg [3] $end
$var wire 1 c! mux_into_reg [2] $end
$var wire 1 d! mux_into_reg [1] $end
$var wire 1 e! mux_into_reg [0] $end

$scope module DFF0 $end
$var parameter 32 f! n $end
$var wire 1 [ clk $end
$var wire 1 ^! in [7] $end
$var wire 1 _! in [6] $end
$var wire 1 `! in [5] $end
$var wire 1 a! in [4] $end
$var wire 1 b! in [3] $end
$var wire 1 c! in [2] $end
$var wire 1 d! in [1] $end
$var wire 1 e! in [0] $end
$var reg 8 g! out [7:0] $end
$upscope $end

$scope module MUX0 $end
$var parameter 32 h! k $end
$var wire 1 $! a1 [7] $end
$var wire 1 %! a1 [6] $end
$var wire 1 &! a1 [5] $end
$var wire 1 '! a1 [4] $end
$var wire 1 (! a1 [3] $end
$var wire 1 )! a1 [2] $end
$var wire 1 *! a1 [1] $end
$var wire 1 +! a1 [0] $end
$var wire 1 z a0 [7] $end
$var wire 1 { a0 [6] $end
$var wire 1 | a0 [5] $end
$var wire 1 } a0 [4] $end
$var wire 1 ~ a0 [3] $end
$var wire 1 !! a0 [2] $end
$var wire 1 "! a0 [1] $end
$var wire 1 #! a0 [0] $end
$var wire 1 ]! s $end
$var reg 8 i! out [7:0] $end
$upscope $end
$upscope $end

$scope module DUMMY_REGISTER $end
$var parameter 32 j! k $end
$var wire 1 [ clk $end
$var wire 1 k! enable $end
$var wire 1 j in [7] $end
$var wire 1 k in [6] $end
$var wire 1 l in [5] $end
$var wire 1 m in [4] $end
$var wire 1 n in [3] $end
$var wire 1 o in [2] $end
$var wire 1 p in [1] $end
$var wire 1 q in [0] $end
$var wire 1 ,! out [7] $end
$var wire 1 -! out [6] $end
$var wire 1 .! out [5] $end
$var wire 1 /! out [4] $end
$var wire 1 0! out [3] $end
$var wire 1 1! out [2] $end
$var wire 1 2! out [1] $end
$var wire 1 3! out [0] $end
$var wire 1 l! mux_into_reg [7] $end
$var wire 1 m! mux_into_reg [6] $end
$var wire 1 n! mux_into_reg [5] $end
$var wire 1 o! mux_into_reg [4] $end
$var wire 1 p! mux_into_reg [3] $end
$var wire 1 q! mux_into_reg [2] $end
$var wire 1 r! mux_into_reg [1] $end
$var wire 1 s! mux_into_reg [0] $end

$scope module DFF0 $end
$var parameter 32 t! n $end
$var wire 1 [ clk $end
$var wire 1 l! in [7] $end
$var wire 1 m! in [6] $end
$var wire 1 n! in [5] $end
$var wire 1 o! in [4] $end
$var wire 1 p! in [3] $end
$var wire 1 q! in [2] $end
$var wire 1 r! in [1] $end
$var wire 1 s! in [0] $end
$var reg 8 u! out [7:0] $end
$upscope $end

$scope module MUX0 $end
$var parameter 32 v! k $end
$var wire 1 j a1 [7] $end
$var wire 1 k a1 [6] $end
$var wire 1 l a1 [5] $end
$var wire 1 m a1 [4] $end
$var wire 1 n a1 [3] $end
$var wire 1 o a1 [2] $end
$var wire 1 p a1 [1] $end
$var wire 1 q a1 [0] $end
$var wire 1 ,! a0 [7] $end
$var wire 1 -! a0 [6] $end
$var wire 1 .! a0 [5] $end
$var wire 1 /! a0 [4] $end
$var wire 1 0! a0 [3] $end
$var wire 1 1! a0 [2] $end
$var wire 1 2! a0 [1] $end
$var wire 1 3! a0 [0] $end
$var wire 1 k! s $end
$var reg 8 w! out [7:0] $end
$upscope $end
$upscope $end

$scope module reg_A $end
$var parameter 32 x! k $end
$var wire 1 [ clk $end
$var wire 1 y! enable $end
$var wire 1 4! in [7] $end
$var wire 1 5! in [6] $end
$var wire 1 6! in [5] $end
$var wire 1 7! in [4] $end
$var wire 1 8! in [3] $end
$var wire 1 9! in [2] $end
$var wire 1 :! in [1] $end
$var wire 1 ;! in [0] $end
$var wire 1 <! out [7] $end
$var wire 1 =! out [6] $end
$var wire 1 >! out [5] $end
$var wire 1 ?! out [4] $end
$var wire 1 @! out [3] $end
$var wire 1 A! out [2] $end
$var wire 1 B! out [1] $end
$var wire 1 C! out [0] $end
$var wire 1 z! mux_into_reg [7] $end
$var wire 1 {! mux_into_reg [6] $end
$var wire 1 |! mux_into_reg [5] $end
$var wire 1 }! mux_into_reg [4] $end
$var wire 1 ~! mux_into_reg [3] $end
$var wire 1 !" mux_into_reg [2] $end
$var wire 1 "" mux_into_reg [1] $end
$var wire 1 #" mux_into_reg [0] $end

$scope module DFF0 $end
$var parameter 32 $" n $end
$var wire 1 [ clk $end
$var wire 1 z! in [7] $end
$var wire 1 {! in [6] $end
$var wire 1 |! in [5] $end
$var wire 1 }! in [4] $end
$var wire 1 ~! in [3] $end
$var wire 1 !" in [2] $end
$var wire 1 "" in [1] $end
$var wire 1 #" in [0] $end
$var reg 8 %" out [7:0] $end
$upscope $end

$scope module MUX0 $end
$var parameter 32 &" k $end
$var wire 1 4! a1 [7] $end
$var wire 1 5! a1 [6] $end
$var wire 1 6! a1 [5] $end
$var wire 1 7! a1 [4] $end
$var wire 1 8! a1 [3] $end
$var wire 1 9! a1 [2] $end
$var wire 1 :! a1 [1] $end
$var wire 1 ;! a1 [0] $end
$var wire 1 <! a0 [7] $end
$var wire 1 =! a0 [6] $end
$var wire 1 >! a0 [5] $end
$var wire 1 ?! a0 [4] $end
$var wire 1 @! a0 [3] $end
$var wire 1 A! a0 [2] $end
$var wire 1 B! a0 [1] $end
$var wire 1 C! a0 [0] $end
$var wire 1 y! s $end
$var reg 8 '" out [7:0] $end
$upscope $end
$upscope $end

$scope module reg_B $end
$var parameter 32 (" k $end
$var wire 1 [ clk $end
$var wire 1 )" enable $end
$var wire 1 4! in [7] $end
$var wire 1 5! in [6] $end
$var wire 1 6! in [5] $end
$var wire 1 7! in [4] $end
$var wire 1 8! in [3] $end
$var wire 1 9! in [2] $end
$var wire 1 :! in [1] $end
$var wire 1 ;! in [0] $end
$var wire 1 D! out [7] $end
$var wire 1 E! out [6] $end
$var wire 1 F! out [5] $end
$var wire 1 G! out [4] $end
$var wire 1 H! out [3] $end
$var wire 1 I! out [2] $end
$var wire 1 J! out [1] $end
$var wire 1 K! out [0] $end
$var wire 1 *" mux_into_reg [7] $end
$var wire 1 +" mux_into_reg [6] $end
$var wire 1 ," mux_into_reg [5] $end
$var wire 1 -" mux_into_reg [4] $end
$var wire 1 ." mux_into_reg [3] $end
$var wire 1 /" mux_into_reg [2] $end
$var wire 1 0" mux_into_reg [1] $end
$var wire 1 1" mux_into_reg [0] $end

$scope module DFF0 $end
$var parameter 32 2" n $end
$var wire 1 [ clk $end
$var wire 1 *" in [7] $end
$var wire 1 +" in [6] $end
$var wire 1 ," in [5] $end
$var wire 1 -" in [4] $end
$var wire 1 ." in [3] $end
$var wire 1 /" in [2] $end
$var wire 1 0" in [1] $end
$var wire 1 1" in [0] $end
$var reg 8 3" out [7:0] $end
$upscope $end

$scope module MUX0 $end
$var parameter 32 4" k $end
$var wire 1 4! a1 [7] $end
$var wire 1 5! a1 [6] $end
$var wire 1 6! a1 [5] $end
$var wire 1 7! a1 [4] $end
$var wire 1 8! a1 [3] $end
$var wire 1 9! a1 [2] $end
$var wire 1 :! a1 [1] $end
$var wire 1 ;! a1 [0] $end
$var wire 1 D! a0 [7] $end
$var wire 1 E! a0 [6] $end
$var wire 1 F! a0 [5] $end
$var wire 1 G! a0 [4] $end
$var wire 1 H! a0 [3] $end
$var wire 1 I! a0 [2] $end
$var wire 1 J! a0 [1] $end
$var wire 1 K! a0 [0] $end
$var wire 1 )" s $end
$var reg 8 5" out [7:0] $end
$upscope $end
$upscope $end

$scope module ALU $end
$var wire 1 <! Ain [7] $end
$var wire 1 =! Ain [6] $end
$var wire 1 >! Ain [5] $end
$var wire 1 ?! Ain [4] $end
$var wire 1 @! Ain [3] $end
$var wire 1 A! Ain [2] $end
$var wire 1 B! Ain [1] $end
$var wire 1 C! Ain [0] $end
$var wire 1 D! Bin [7] $end
$var wire 1 E! Bin [6] $end
$var wire 1 F! Bin [5] $end
$var wire 1 G! Bin [4] $end
$var wire 1 H! Bin [3] $end
$var wire 1 I! Bin [2] $end
$var wire 1 J! Bin [1] $end
$var wire 1 K! Bin [0] $end
$var wire 1 6" ALUop [2] $end
$var wire 1 7" ALUop [1] $end
$var wire 1 8" ALUop [0] $end
$var reg 8 9" out [7:0] $end
$upscope $end

$scope module STACK $end
$var parameter 32 :" data_width $end
$var parameter 32 ;" addr_width $end
$var wire 1 [ clk $end
$var wire 1 <" write $end
$var wire 1 z read_address [7] $end
$var wire 1 { read_address [6] $end
$var wire 1 | read_address [5] $end
$var wire 1 } read_address [4] $end
$var wire 1 ~ read_address [3] $end
$var wire 1 !! read_address [2] $end
$var wire 1 "! read_address [1] $end
$var wire 1 #! read_address [0] $end
$var wire 1 z write_address [7] $end
$var wire 1 { write_address [6] $end
$var wire 1 | write_address [5] $end
$var wire 1 } write_address [4] $end
$var wire 1 ~ write_address [3] $end
$var wire 1 !! write_address [2] $end
$var wire 1 "! write_address [1] $end
$var wire 1 #! write_address [0] $end
$var wire 1 ,! din [7] $end
$var wire 1 -! din [6] $end
$var wire 1 .! din [5] $end
$var wire 1 /! din [4] $end
$var wire 1 0! din [3] $end
$var wire 1 1! din [2] $end
$var wire 1 2! din [1] $end
$var wire 1 3! din [0] $end
$var reg 8 =" dout [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0!
bx01 "
b10101110 #
bx X
bx Y
0Z
xT!
xU!
xV!
xW!
xX!
xY!
bx Z!
bx [!
bx g!
bx i!
bx u!
bx w!
bx %"
bx '"
bx 3"
bx 5"
bx 9"
bx ="
b1000 \!
b1000 f!
b1000 h!
b1000 j!
b1000 t!
b1000 v!
b1000 x!
b1000 $"
b1000 &"
b1000 ("
b1000 2"
b1000 4"
b1000 :"
b1000 ;"
x-
x,
x+
x*
x)
x(
x'
x&
0%
0$
04
03
02
01
00
0/
1.
0;
0:
09
08
07
06
15
0B
0A
0@
0?
0>
0=
1<
0I
0H
0G
0F
0E
0D
1C
0P
0O
0N
0M
0L
0K
1J
0W
0V
0U
0T
0S
0R
1Q
0q
xp
xo
xn
0m
xl
0k
xj
zy
zx
zw
zv
zu
zt
zs
zr
x#!
x"!
x!!
x~
x}
x|
x{
xz
x+!
x*!
x)!
x(!
x'!
x&!
x%!
x$!
x3!
x2!
x1!
x0!
x/!
x.!
x-!
x,!
x;!
x:!
x9!
x8!
x7!
x6!
x5!
x4!
xC!
xB!
xA!
x@!
x?!
x>!
x=!
x<!
xK!
xJ!
xI!
xH!
xG!
xF!
xE!
xD!
xS!
xR!
xQ!
xP!
xO!
xN!
xM!
xL!
xe!
xd!
xc!
xb!
xa!
x`!
x_!
x^!
xs!
xr!
xq!
xp!
xo!
xn!
xm!
xl!
x#"
x""
x!"
x~!
x}!
x|!
x{!
xz!
x1"
x0"
x/"
x."
x-"
x,"
x+"
x*"
0[
0i
1h
1g
1f
0e
1d
0c
1b
0a
0`
1_
0^
x]
x\
x<"
x8"
x7"
x6"
x)"
xy!
xk!
x]!
$end
#5
1!
1[
b11 Z!
#10
bx11 "
0!
1^
0[
#15
1!
1[
b10 Z!
0U!
0W!
1V!
1T!
0<"
0p
0o
0n
0l
0j
0+!
0*!
0)!
0(!
0'!
0&!
0%!
0$!
1]!
1k!
b0 i!
b0 w!
0s!
0r!
0q!
0p!
0o!
0n!
0m!
0l!
0e!
0d!
0c!
0b!
0a!
0`!
0_!
0^!
#20
0!
0[
#25
1!
1[
b0 g!
b0 u!
b0 Z!
0V!
0T!
03!
02!
01!
00!
0/!
0.!
0-!
0,!
0#!
0"!
0!!
0~
0}
0|
0{
0z
0]!
0k!
0-
0,
0+
0*
0)
0(
0'
0&
#30
0!
0[
#35
1!
1[
#40
0!
0[
#45
1!
1[
#50
bx10 "
0!
0_
0[
#55
1!
1[
b1 Z!
1U!
1T!
1p
1o
1n
1l
1j
1+!
1k!
b10101110 w!
1r!
1q!
1p!
1n!
1l!
#60
bx11 "
0!
1_
0[
#65
1!
1[
b10101110 u!
b100 Z!
1W!
0T!
1<"
12!
11!
10!
1.!
1,!
0k!
1,
1+
1*
1(
1&
#70
0!
0[
#75
1!
1[
b101 Z!
0W!
1V!
0<"
1]!
b1 i!
1e!
#80
0!
0[
#85
1!
1[
b1 g!
b0 Z!
0U!
0V!
0p
0o
0n
0l
0j
0+!
1#!
0]!
b10101110 ="
0;!
1:!
19!
18!
07!
16!
05!
14!
#90
0!
0[
#95
1!
1[
bx ="
x;!
x:!
x9!
x8!
x7!
x6!
x5!
x4!
#100
b10101111 #
b10101011 #
b10100011 #
b10000011 #
0!
1i
0g
0f
0d
0[
#105
1!
1[
#110
0!
0[
#115
1!
1[
#120
0!
0[
#125
1!
1[
#130
0!
0[
#135
1!
1[
#140
bx10 "
0!
0_
0[
#145
1!
1[
b1 Z!
1U!
1T!
1q
1p
1j
1*!
1k!
b10000011 w!
1s!
0q!
0p!
0n!
#150
bx11 "
0!
1_
0[
#155
1!
1[
b10000011 u!
b100 Z!
1W!
0T!
1<"
13!
01!
00!
0.!
0k!
1-
0+
0*
0(
#160
0!
0[
#165
1!
1[
b101 Z!
0W!
1V!
0<"
1]!
b10 i!
0e!
1d!
#170
0!
0[
#175
1!
1[
b10 g!
b0 Z!
0U!
0V!
0q
0p
0j
0*!
0#!
1"!
0]!
b10000011 ="
1;!
1:!
09!
08!
07!
06!
05!
14!
#180
0!
0[
#185
1!
1[
bx ="
x;!
x:!
x9!
x8!
x7!
x6!
x5!
x4!
#190
bx01 "
0!
0^
0[
#195
1!
1[
b11 Z!
#200
bx11 "
0!
1^
0[
#205
1!
1[
b10 Z!
1V!
1T!
1]!
1k!
b0 w!
b0 i!
0d!
0s!
0r!
0l!
#210
0!
0[
#215
1!
1[
b0 g!
b0 u!
b0 Z!
0V!
0T!
03!
02!
0,!
0"!
0]!
0k!
0-
0,
0&
#220
0!
0[
#225
1!
1[
b10101110 ="
0;!
1:!
19!
18!
07!
16!
05!
14!
#230
0!
0[
#235
1!
1[
#240
0!
0[
#245
1!
1[
#250
bx10 "
0!
0_
0[
#255
1!
1[
b1 Z!
1U!
1T!
1q
1p
1j
1+!
1k!
b10000011 w!
1s!
1r!
1l!
#260
bx11 "
0!
1_
0[
#265
1!
1[
b10000011 u!
b100 Z!
1W!
0T!
1<"
13!
12!
1,!
0k!
1-
1,
1&
#270
0!
0[
#275
1!
1[
b101 Z!
0W!
1V!
0<"
1]!
b1 i!
1e!
#280
0!
0[
#285
1!
1[
b1 g!
b0 Z!
0U!
0V!
0q
0p
0j
0+!
1#!
0]!
b10000011 ="
1;!
09!
08!
06!
#290
0!
0[
#295
1!
1[
#300
0!
0[
#305
1!
1[
#310
0!
0[
#315
1!
1[
#320
0!
0[
#325
1!
1[
#330
0!
0[
#335
1!
1[
#340
0!
0[
#345
1!
1[
#350
0!
0[
#355
1!
1[
#360
0!
0[
#365
1!
1[
#370
0!
0[
#375
1!
1[
#380
0!
0[
#385
1!
1[
#390
0!
0[
#395
1!
1[
#400
0!
0[
#405
1!
1[
#410
0!
0[
#415
1!
1[
#420
0!
0[
#425
1!
1[
#430
0!
0[
#435
1!
1[
#440
0!
0[
#445
1!
1[
#450
bx10 "
0!
0_
0[
#455
1!
1[
b1 Z!
1U!
1T!
1q
1p
1j
1*!
1k!
#460
bx11 "
0!
1_
0[
#465
1!
1[
b100 Z!
1W!
0T!
1<"
0k!
#470
0!
0[
#475
1!
1[
b101 Z!
0W!
1V!
0<"
1]!
b10 i!
0e!
1d!
#480
0!
0[
#485
1!
1[
b10 g!
b0 Z!
0U!
0V!
0q
0p
0j
0*!
0#!
1"!
0]!
#490
0!
0[
#495
1!
1[
bx ="
x;!
x:!
x9!
x8!
x7!
x6!
x5!
x4!
#500
0!
0[
#505
1!
1[
#510
0!
0[
#515
1!
1[
#520
0!
0[
#525
1!
1[
#530
0!
0[
#535
1!
1[
#540
bx10 "
0!
0_
0[
#545
1!
1[
b1 Z!
1U!
1T!
1q
1p
1j
1+!
1*!
1k!
#550
bx11 "
0!
1_
0[
#555
1!
1[
b100 Z!
1W!
0T!
1<"
0k!
#560
0!
0[
#565
1!
1[
b101 Z!
0W!
1V!
0<"
1]!
b11 i!
1e!
#570
0!
0[
#575
1!
1[
b11 g!
b0 Z!
0U!
0V!
0q
0p
0j
0+!
0*!
1#!
0]!
b10000011 ="
1;!
1:!
09!
08!
07!
06!
05!
14!
#580
0!
0[
#585
1!
1[
bx ="
x;!
x:!
x9!
x8!
x7!
x6!
x5!
x4!
#590
0!
0[
#595
1!
1[
#600
0!
0[
#605
1!
1[
#610
0!
0[
#615
1!
1[
#620
0!
0[
#625
1!
1[
#630
bx10 "
0!
0_
0[
#635
1!
1[
b1 Z!
1U!
1T!
1q
1p
1j
1)!
1k!
#640
bx11 "
0!
1_
0[
#645
1!
1[
b100 Z!
1W!
0T!
1<"
0k!
#650
0!
0[
#655
1!
1[
b101 Z!
0W!
1V!
0<"
1]!
b100 i!
0e!
0d!
1c!
#660
0!
0[
#665
1!
1[
b100 g!
b0 Z!
0U!
0V!
0q
0p
0j
0)!
0#!
0"!
1!!
0]!
b10000011 ="
1;!
1:!
09!
08!
07!
06!
05!
14!
#670
0!
0[
#675
1!
1[
bx ="
x;!
x:!
x9!
x8!
x7!
x6!
x5!
x4!
#680
0!
0[
#685
1!
1[
#690
0!
0[
#695
1!
1[
#700
0!
0[
#705
1!
1[
#710
0!
0[
#715
1!
1[
#720
0!
0[
#725
1!
1[
#730
0!
0[
#735
1!
1[
#740
0!
0[
#745
1!
1[
#750
0!
0[
#755
1!
1[
#760
0!
0[
#765
1!
1[
#770
0!
0[
#775
1!
1[
#780
bx01 "
0!
0^
0[
#785
1!
1[
b11 Z!
#790
bx11 "
0!
1^
0[
#795
1!
1[
b10 Z!
1V!
1T!
1]!
1k!
b0 w!
b0 i!
0c!
0s!
0r!
0l!
#800
0!
0[
#805
1!
1[
b0 g!
b0 u!
b0 Z!
0V!
0T!
03!
02!
0,!
0!!
0]!
0k!
0-
0,
0&
#810
0!
0[
#815
1!
1[
b10000011 ="
1;!
1:!
09!
08!
07!
06!
05!
14!
#820
0!
0[
#825
1!
1[
#830
0!
0[
#835
1!
1[
#840
0!
0[
#845
1!
1[
#850
0!
0[
#855
1!
1[
#860
0!
0[
#865
1!
1[
#870
0!
0[
#875
1!
1[
#880
0!
0[
#885
1!
1[
#890
b10000111 #
b10001111 #
b10011111 #
b10111111 #
b11111111 #
0!
1g
1f
1e
1d
1c
0[
#895
1!
1[
#900
0!
0[
#905
1!
1[
#910
0!
0[
#915
1!
1[
#920
0!
0[
#925
1!
1[
#930
bx10 "
0!
0_
0[
#935
1!
1[
b1 Z!
1U!
1T!
1q
1p
1o
1n
1m
1l
1k
1j
1+!
1k!
b11111111 w!
1s!
1r!
1q!
1p!
1o!
1n!
1m!
1l!
#940
bx11 "
0!
1_
0[
#945
1!
1[
b11111111 u!
b100 Z!
1W!
0T!
1<"
13!
12!
11!
10!
1/!
1.!
1-!
1,!
0k!
1-
1,
1+
1*
1)
1(
1'
1&
#950
0!
0[
#955
1!
1[
b101 Z!
0W!
1V!
0<"
1]!
b1 i!
1e!
#960
0!
0[
#965
1!
1[
b1 g!
b0 Z!
0U!
0V!
0q
0p
0o
0n
0m
0l
0k
0j
0+!
1#!
0]!
b11111111 ="
19!
18!
17!
16!
15!
#970
0!
0[
#975
1!
1[
b10000011 ="
09!
08!
07!
06!
05!
#980
0!
0[
#985
1!
1[
#990
0!
0[
#995
1!
1[
#1000
0!
0[
#1005
1!
1[
#1010
0!
0[
#1015
1!
1[
#1020
0!
0[
#1025
1!
1[
#1030
0!
0[
#1035
1!
1[
#1040
0!
0[
#1045
1!
1[
#1050
0!
0[
#1055
1!
1[
#1060
0!
0[
#1065
1!
1[
#1070
0!
0[
#1075
1!
1[
